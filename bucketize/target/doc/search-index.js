var searchIndex = new Map(JSON.parse('[\
["bucketize",{"doc":"<code>bucketize</code> is a crate for slotting numerical values into …","t":"FNNNNNNNNNNNNNNN","n":["Bucketizer","borrow","borrow_mut","bucket","bucketize","clone","clone_into","eq","fmt","from","into","new","to_owned","try_from","try_into","type_id"],"q":[[0,"bucketize"],[16,"core::option"],[17,"core::fmt"],[18,"core::fmt"],[19,"core::any"]],"d":["A <code>Bucketizer</code> holds the list of buckets you want to slot …","","","Add a new bucket to the <code>Bucketizer</code>. Consumes and returns …","Get the bucketized value of <code>input</code> based on the previously …","","","","","Returns the argument unchanged.","Calls <code>U::from(self)</code>.","Create a new <code>Bucketizer</code> with no buckets configured.","","","",""],"i":[0,1,1,1,1,1,1,1,1,1,1,1,1,1,1,1],"f":"`{ce{}{}}0{{b{f{d}}{f{d}}d}b}{{bd}{{f{d}}}}{bb}{{ce}h{}{}}{{bb}j}{{bl}n}{cc{}}7{{}b}8{c{{A`{e}}}{}{}}0{cAb{}}","c":[],"p":[[5,"Bucketizer",0],[1,"f64"],[6,"Option",16],[1,"unit"],[1,"bool"],[5,"Formatter",17],[8,"Result",17],[6,"Result",18],[5,"TypeId",19]],"b":[]}]\
]'));
if (typeof exports !== 'undefined') exports.searchIndex = searchIndex;
else if (window.initSearch) window.initSearch(searchIndex);
